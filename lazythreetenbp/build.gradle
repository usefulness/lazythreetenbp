plugins {
    alias(libs.plugins.starter.library.android)
    id("com.starter.publishing")
    alias(libs.plugins.ticktock)
    alias(libs.plugins.kotlinx.binarycompatibility)
}

tickTock {
    tzVersion.set(providers.gradleProperty("lazythreetenbp.tzdbVersion"))
    codeOutputDir.set(layout.projectDirectory.dir("src/main/kotlin"))
    tzOutputDir.set(layout.projectDirectory.dir("src/main/assets"))
    packageName.set("com.usefulness.threetenbp")
    language.set("kotlin")
}

android {
    namespace = rootProject.name
    defaultConfig {
        minSdk 23

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    publishing {
        singleVariant("release")
    }
    kotlinOptions {
        freeCompilerArgs += '-Xexplicit-api=strict'
    }
    lint {
        warningsAsErrors true
        checkReleaseBuilds false
        disable += "UseTomlInstead"
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

androidComponents {
    beforeVariants(selector().withBuildType("release")) { builder ->
        builder.enable = true
    }
}

tasks.register("writeTzdbVersion", WriteProperties) {
    it.destinationFile = rootProject.file("tzdb_version.properties")
    it.property("ianaVersion", tickTock.tzVersion)
}

tasks.named("generateLazyZoneRules") {
    finalizedBy("formatKotlin")
    finalizedBy("writeTzdbVersion")
}

tasks.matching { it.name == "formatKotlinMain" }.configureEach {
    mustRunAfter("generateLazyZoneRules")
}

dependencies {
    tickTockCompiler libs.ticktock.compiler
    compileOnly libs.annotation.core
    // noinspection UseTomlInstead
    implementation("org.threeten:threetenbp:1.6.8:no-tzdb")

    testImplementation libs.junit.core
    testImplementation libs.robolectric.core
    testImplementation libs.truth.core
}
