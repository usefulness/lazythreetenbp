plugins {
    id("com.starter.library.android")
    id("com.starter.publishing")
    id("dev.zacsweers.ticktock")
}

tickTock {
    tzVersion.set(provider { project.getProperty("lazythreetenbp.tzdbVersion") })
    codeOutputDir.set(layout.projectDirectory.dir("src/main/kotlin"))
    tzOutputDir.set(layout.projectDirectory.dir("src/main/assets"))
    packageName.set("com.usefulness.threetenbp")
    language.set("kotlin")
}

android {
    compileSdk 31

    namespace = rootProject.name
    defaultConfig {
        minSdk 23

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    publishing {
        singleVariant("release")
    }
    kotlinOptions {
        freeCompilerArgs += '-Xexplicit-api=strict'
    }
    lint {
        warningsAsErrors true
        checkReleaseBuilds false
    }
    androidComponents {
        beforeVariants(selector().withBuildType("release")) { builder ->
            builder.enable = true
        }
    }
}

tasks.register("writeTzdbVersion") {
    def target = rootProject.file("tzdb_version.properties")
    doLast {
        def updatedVersion = tickTock.tzVersion.get()
        target.text = "ianaVersion=$updatedVersion\n"
    }
}

tasks.named("generateLazyZoneRules") {
    finalizedBy("formatKotlin")
    finalizedBy("writeTzdbVersion")
}

dependencies {
    tickTockCompiler libs.ticktock.compiler
    compileOnly libs.annotation.core
    implementation(libs.threetenbp.core) { artifact { classifier = 'no-tzdb' } }

    androidTestImplementation libs.junit.core
    androidTestImplementation libs.truth.core
    androidTestImplementation libs.androidtest.runner
    androidTestImplementation libs.androidtest.junitext
}
